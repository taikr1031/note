DB2体系结构中最高一层是系统，一个系统表示一个DB2的安转。在一个由很多机器组成的网络环境中，有时也称系统为数据库分区。一个系统系统可以包含多个DB2实例，每个实例可以管理一个或多个数据库。

在LIUNX和UNIX上创建实例时，必须创建和实例名一样的用户，目的是为了用这个用户的home目录作为实例目录。但在WINDOWS上不需要。

什么是表空间？
     	表空间是定义表和索引在数据库内存储位置的逻辑实体，所有 DB2 表和索引都驻留在表空间中，数据库允许对表和索引数据的物理存储位置进行完全控制。
     	
SQL概述
数据控制语言（DCL） -- 提供对数据库对象的访问控制 
数据定义语言（DDL） -- 创建、修改或删除数据库对象 
数据操作语言（DML） -- 选择、插入、更新或删除数据   

表空间
表空间由很多容器组成，我们每次写人容器的时候，写的单位为一个扩展数据块extent。extent的大小可以在创建数据库和表空间的时候通过extentsize大小指定；而extent又是由很多extentsize（默认为32）个数据页（datapage）组成。datapage是DB2数据库中最小的存储单位，是我们每次读写的最小I/0单位。

缓冲池
从磁盘读取表或索引数据时，数据库管理器分配的用于高速缓存的这些表或索引数据的内存区域。
一个表空间只能与一个缓冲池相关联，而一个缓冲池则可用于多个表空间。
对于OLAP，建议采用一个大的缓冲池，利于大块顺序读取；对于OLTP，建议采用多个小的缓冲池，可更长时间高速缓存应用程序使用的数据页，以便相应时间更快。
如果有一些不同页大小的表空间，那么每种页大小的表空间必须至少有一个缓冲池。

如果对于需要经常对一个表进行批量插入、更新和删除操作，可以考虑在创建表的时候使用 not logged initially。


db2 rename table tta to rn_tab

索引
创建索引的时候并没有指定排序属性，默认为ASC升序排列。
DB2数据库采用B+树结构。一个B+树有一层或多层。其中，RID表示行标识。顶层称为根节点。底层由叶节点组成。底层存储了索引键值，并有一个指针(RID)指向包含键值的表中的行。根节点层和叶节点层之间的那些层称为中间节点。
当查找特定的索引键值时，索引管理器会从根节点开始搜索该索引树。对于下一层的每个节点根都包含一个键，每个键的值是下一层中对应节点的最大现有键值。例如，如果一个索引有3层(如图5-16所示)，那么，要查找一个索引键值，索引管理器搜索根节点，以查找大于或等于要查找的键的第一个键值；根节点键指向特定的中间节点。索引管理器遵循此过程遍历中间节点，直到找到包含所需要的索引键的叶节点。
双向索引：allow reverse scans

索引总结
以下准则可帮助您确定如何创建可用于各种目的的索引：
要避免某些排序，只要有可能，就使用CREATE UNIQUE INDEX语句定义主键和唯一键。

要改善数据检索，将INCLUDE列添加至唯一索引。合适的列为：

被频繁存取，因此可从完全索引访问(index access only)受益的列

不需要用来限制索引扫描的范围的列

不影响索引键的排序或唯一性的列

要有效存取小表，使用索引来优化对含有较多数据页的表的频繁查询，数据页数记录在SYSCAT.TABLES目录视图的NPAGES列中。您应该：

根据连接表时要使用的任何一列来创建索引

根据将用于定期索引特定值的任何列来创建索引

要有效地搜索，对键使用升序还是降序取决于将最常使用的次序。尽管当在CREATE INDEX语句中指定了ALLOW REVERSE SCANS参数时可以按逆向方向搜索值，但是，执行指定索引次序的扫描比执行逆向扫描稍微更快一些。

要节省索引维护成本和空间：
		避免创建的索引是这些列上其他索引键的部分键。例如，如果列a，b和c上有索引，则列a和b上的第二个索引一般用处不大
		不在所有列上任意创建索引。不必要的索引不仅占用空间，而且会导致大量准备时间。当使用具有动态编程连接枚举的优化级别时，对于复杂的查询这特别重要。

使用下列一般规则来确定将为表定义的索引的典型数目。此数目根据数据库的主要使用来确定：
		对于在线事务处理(OLTP)环境，创建2个或3个索引
		对于只读查询环境，可以创建5个以上索引
		对于混合查询和在线事务处理环境，可以创建2到5个索引
		要改进对父表执行的删除和更新操作的性能，在外键上创建索引。
		对于快速排序操作，在频繁用于排序数据的列上创建索引。

要改进多列索引的连接性能，如果第一个键列有多项选择，则使用最常用的"="(等值连接)谓词指定的那一列，或使用如第一个键那样具有最多不同值的那些列。

在下列情况下，考虑创建索引：

在最频繁处理的查询和事务的WHERE子句中所使用的那些列上创建索引。
在按查询所需要的顺序对行排序的一列或多列上创建索引。不仅在ORDER BY子句中，而且其他功能，如DISTINCT和GROUP BY子句也都需要排序。
例如，考虑下列SQL语句：
    SELECT LASTNAME  FROM EMPLOYEE  WHERE WORKDEPT IN('A00', 'D11', 'D21') 
		如果为EMPLOYEE表的WORKDEPT和LASTNAME列定义了索引，那么通过扫描索引而不是扫描整个表可能会更有效地处理该语句。注意，因为该谓词基于WORKDEPT，因此此列应是该索引的第一列。
使用INCLUDE列创建索引可改善表上索引的使用。使用上述示例，可将唯一索引定义为：
    CREATE UNIQUE INDEX x ON employee(workdept) INCLUDE(lastname) 
		指定lastname为INCLUDE列而不是索引键的一部分，意味着lastame只存储在索引的叶子页上。
















